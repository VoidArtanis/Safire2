<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:Safire_Controls="clr-namespace:Safire.Controls">

    <Style x:Key="UnknownArtistShape" TargetType="{x:Type Shape}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Image, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                <Setter Property="Fill" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="ArtistTemplate">
        <Border
            Height="194.5"
            Width="Auto" BorderBrush="{DynamicResource ImageBoxBorder}" BorderThickness="1" Padding="2,4">
            <Grid Background="{x:Null}">
                <Path
                    Data="M11.092777,54.999001 L24.977519,54.999001 25.405498,55.547235 C31.007489,62.370785 39.948398,66.787528 50.021766,66.787528 60.09513,66.787528 69.036041,62.370785 74.63803,55.547235 L75.066009,54.999001 85.242217,54.999001 C91.092452,54.999 95.834998,59.31913 95.834998,64.648282 L95.834998,123.34872 C95.834998,128.67787 91.092452,132.998 85.242217,132.998 L11.092777,132.998 C5.2425478,132.998 0.49999964,128.67787 0.5,123.34872 L0.5,64.648282 C0.49999964,59.31913 5.2425478,54.999 11.092777,54.999001 z M50.166999,0.5 C64.802543,0.5 76.666999,12.476158 76.666999,27.2495 76.666999,42.022841 64.802543,53.999001 50.166999,53.999 35.531455,53.999001 23.666999,42.022841 23.666999,27.2495 23.666999,12.476158 35.531455,0.5 50.166999,0.5 z"
                    HorizontalAlignment="Center" Height="Auto" Margin="22.333,10.332,24.5,40.67" Stretch="Fill"
                    VerticalAlignment="Stretch" Width="96.335" Fill="#FF414141" StrokeThickness="2" Stroke="#FF5A5A5A" />
                <Border HorizontalAlignment="Left" Height="150" Margin="0" VerticalAlignment="Top" Width="147.5"
                        BorderThickness="0,0,0,1" BorderBrush="{DynamicResource ImageBoxBorder}">
                    <Image Source="{Binding Image}" Stretch="UniformToFill" />
                </Border>
                <TextBlock Height="18" Margin="2,0,0,15.335" TextWrapping="Wrap" Text="{Binding Name}"
                           VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="145.5"
                           Foreground="{DynamicResource Text}" FontWeight="Bold" />
                <StackPanel x:Name="Songs" Margin="2,0,0.5,0" Orientation="Horizontal" VerticalAlignment="Bottom">
                    <TextBlock x:Name="SongCount" Height="15.335" Margin="0" TextWrapping="Wrap"
                               Text="{Binding SongCount}" VerticalAlignment="Stretch" HorizontalAlignment="Left"
                               Width="Auto" Foreground="{DynamicResource SubText}" FontSize="10.667" />
                    <TextBlock x:Name="Caption" Height="15.335" Margin="0" TextWrapping="Wrap"
                               VerticalAlignment="Stretch" HorizontalAlignment="Left" Width="Auto"
                               Foreground="{DynamicResource SubText}" FontSize="10.667" Text=" Songs" />
                </StackPanel>
            </Grid>
        </Border>
    </DataTemplate>

    <!-- Resource dictionary entries should be defined here. -->
    <SolidColorBrush x:Key="ListBorder" Color="#828790" />
    <Style x:Key="WrapListBoxTemplate" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <Safire_Controls:VirtualizingWrapPanel Height="Auto" HorizontalAlignment="Left"
                                                                   VerticalAlignment="Top" IsItemsHost="True" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width" Value="18" />
        <Setter Property="Background" Value="{StaticResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Black">
                        <Rectangle HorizontalAlignment="Center"
                                   Width="1"
                                   Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type GridViewColumnHeader}"
           TargetType="GridViewColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground"
                Value="{DynamicResource Text}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Border Name="HeaderBorder"
                                BorderThickness="0,1,0,1"
                                BorderBrush="{StaticResource NormalBorderBrush}"
                                Background="{StaticResource LightBrush}"
                                Padding="2,0,2,0">
                            <ContentPresenter Name="HeaderContent"
                                              Margin="0,0,0,1"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Thumb x:Name="PART_HeaderGripper"
                               HorizontalAlignment="Right"
                               Margin="0,0,-9,0"
                               Style="{StaticResource GridViewColumnHeaderGripper}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="HeaderBorder"
                                    Property="Background" Value="{StaticResource SecondaryVibrant}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="HeaderBorder"
                                    Property="Background" Value="{StaticResource PrimaryVibrant}" />
                            <Setter TargetName="HeaderContent"
                                    Property="Margin" Value="1,1,0,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Fill="#60000000"
                                           Width="{TemplateBinding ActualWidth}"
                                           Height="{TemplateBinding ActualHeight}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Border Name="HeaderBorder"
                                    BorderThickness="0,1,0,1"
                                    BorderBrush="{StaticResource NormalBorderBrush}"
                                    Background="{StaticResource LightBrush}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key=" ListViewSongs" TargetType="ListView">
        <Style.Resources>
            <!-- Foreground for Selected ListViewItem -->
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" 
                                 Color="White"/>
            <!-- Background for Selected ListViewItem -->
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="Transparent"/>
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}">
                        <ScrollViewer
                            Style="{DynamicResource
                        {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource DisabledBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MyListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                 x:Name="Border"
                        Height="25"
                 BorderBrush="Transparent"
                 BorderThickness="1"
                        
                 Background="{TemplateBinding Background}">
                        <GridViewRowPresenter Columns="{TemplateBinding GridView.ColumnCollection}" Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="{StaticResource AltColor1}"></Setter>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"></Setter>
                        </Trigger>
						<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource  SecondaryBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter  Property="Background" Value="{StaticResource SecondaryVibrant}"/>
                        </Trigger>
              
             
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
 
</ResourceDictionary>